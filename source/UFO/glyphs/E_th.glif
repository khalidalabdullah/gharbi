<?xml version='1.0' encoding='UTF-8'?>
<glyph name="Eth" format="2">
  <advance width="1347"/>
  <unicode hex="00D0"/>
  <note>
uni00D0
</note>
  <outline>
    <contour>
      <point x="664" y="0" type="line"/>
      <point x="907" y="0"/>
      <point x="1114" y="123"/>
      <point x="1224" y="326" type="curve" smooth="yes"/>
      <point x="1279" y="427"/>
      <point x="1307" y="542"/>
      <point x="1307" y="671" type="curve" smooth="yes"/>
      <point x="1307" y="737" type="line" smooth="yes"/>
      <point x="1302" y="1128"/>
      <point x="1034" y="1404"/>
      <point x="655" y="1404" type="curve" smooth="yes"/>
      <point x="204" y="1404" type="line"/>
      <point x="204" y="795" type="line"/>
      <point x="40" y="795" type="line"/>
      <point x="40" y="611" type="line"/>
      <point x="204" y="611" type="line"/>
      <point x="204" y="0" type="line"/>
    </contour>
    <contour>
      <point x="743" y="795" type="line"/>
      <point x="543" y="795" type="line"/>
      <point x="543" y="1140" type="line"/>
      <point x="655" y="1140" type="line" smooth="yes"/>
      <point x="853" y="1140"/>
      <point x="960" y="1002"/>
      <point x="960" y="733" type="curve" smooth="yes"/>
      <point x="960" y="671" type="line" smooth="yes"/>
      <point x="960" y="398"/>
      <point x="852" y="260"/>
      <point x="660" y="260" type="curve" smooth="yes"/>
      <point x="543" y="260" type="line"/>
      <point x="543" y="611" type="line"/>
      <point x="743" y="611" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 31
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 15
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 4 31 4 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
111 4 1
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
15 4 1
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 3 values pushed */
63 4 1
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
159 4 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
127 4 1
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
1 12
PUSHB[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1
PUSHB[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1
PUSHB[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
      <key>com.schriftgestaltung.Glyphs.lastChange</key>
      <string>2024-03-30 11:28:57 +0000</string>
    </dict>
  </lib>
</glyph>
