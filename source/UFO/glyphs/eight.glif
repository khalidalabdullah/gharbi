<?xml version='1.0' encoding='UTF-8'?>
<glyph name="eight" format="2">
  <advance width="1100"/>
  <unicode hex="0038"/>
  <note>
uni0038
</note>
  <outline>
    <contour>
      <point x="1013" y="1191"/>
      <point x="762" y="1406"/>
      <point x="549" y="1406" type="qcurve" smooth="yes"/>
      <point x="337" y="1406"/>
      <point x="87" y="1191"/>
      <point x="87" y="1007" type="qcurve" smooth="yes"/>
      <point x="87" y="905"/>
      <point x="190" y="748"/>
      <point x="281" y="701" type="qcurve"/>
      <point x="175" y="651"/>
      <point x="57" y="475"/>
      <point x="57" y="363" type="qcurve" smooth="yes"/>
      <point x="57" y="176"/>
      <point x="323" y="-45"/>
      <point x="553" y="-45" type="qcurve" smooth="yes"/>
      <point x="781" y="-45"/>
      <point x="1042" y="174"/>
      <point x="1042" y="363" type="qcurve" smooth="yes"/>
      <point x="1042" y="480"/>
      <point x="923" y="651"/>
      <point x="824" y="701" type="qcurve"/>
      <point x="912" y="748"/>
      <point x="1013" y="905"/>
      <point x="1013" y="1007" type="qcurve" smooth="yes"/>
    </contour>
    <contour>
      <point x="715" y="304"/>
      <point x="625" y="207"/>
      <point x="553" y="207" type="qcurve" smooth="yes"/>
      <point x="479" y="207"/>
      <point x="386" y="304"/>
      <point x="386" y="389" type="qcurve" smooth="yes"/>
      <point x="386" y="475"/>
      <point x="476" y="570"/>
      <point x="625" y="570"/>
      <point x="715" y="475"/>
      <point x="715" y="389" type="qcurve" smooth="yes"/>
    </contour>
    <contour>
      <point x="618" y="1154"/>
      <point x="686" y="1066"/>
      <point x="686" y="914"/>
      <point x="618" y="823"/>
      <point x="553" y="823" type="qcurve" smooth="yes"/>
      <point x="486" y="823"/>
      <point x="416" y="914"/>
      <point x="416" y="991" type="qcurve" smooth="yes"/>
      <point x="416" y="1068"/>
      <point x="483" y="1154"/>
      <point x="549" y="1154" type="qcurve" smooth="yes"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
21 46 47
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 31
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 15
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
41 21 9
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 2 values pushed */
27 1
PUSHB[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 41 27
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
15 27 41
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1
PUSHB[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
35 1
PUSHB[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
      <key>com.schriftgestaltung.Glyphs.lastChange</key>
      <string>2024-04-02 08:42:39 +0000</string>
    </dict>
  </lib>
</glyph>
